package co.edu.ue.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import co.edu.ue.dao.IUsuariosDao;
import co.edu.ue.dao.UsuariosDao;
import co.edu.ue.entity.Usuarios;

@Service
public class UsuariosService implements IUsuariosService { 
	
	
      @Autowired
	  private IUsuariosDao dao;
      
      private static final String EMAIL_REGEX = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
  	  private static final String NAME_REGEX="^[A-Za-z\\s]+$";
  	  
	    private boolean String esEmailValido(String usuEmail) {
			return usuEmail !=null && usuEmail.matches(EMAIL_REGEX);
		}
		private boolean String esNombreValido(String usuNombre) {
			return usuNombre !=null && usuNombre.matches(EMAIL_REGEX);
		}
		
		//VALIDACION PARA QUE EL EMAIL SEA UNICO
		
		private boolean esEmailUnico(String usuEmail) {
			return UsuariosDao.busquedaporEmail(usuEmail).isEmpty();
		}

      

	    @Override
	    public List<Usuarios> guardarUsuario(Usuarios usuario) {
	        return dao.guardarUsuarios(usuario);
	    }

	    @Override
	    public Usuarios actualizarUsuario(Usuarios usuario) {
	        return dao.actualizarUsuarios(usuario);
	    }

	    @Override
	    public boolean eliminarUsuario(int usuid) {
	        return dao.eliminarUsuarios(usuid);
	    }

	    @Override
	    public List<Usuarios> listaCompleta() {
	        return dao.listaCompleta();
	    }

	    @Override
	    public Usuarios busquedaPorId(int usuid) {//SOLO INGRESAR NUMEROS
	        return dao.busquedaporId(usuid);
	    }

	    @Override
	    public Usuarios busquedaPorEmail(String usuEmail) {
	    	if (usuEmail == null || usuEmail.matches(".@.*")) {//VERIFICAR QUE TENGA @
	    		throw new IllegalArgumentException("El email debe tener un @");
	    	}
	        return dao.busquedaporEmail(usuEmail);
	    }
	    
	}
